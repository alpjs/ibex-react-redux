{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;kBAOwB;;;;;;;;;;;;;;;;;;;;AAFxB,IAAM,SAAS,+BAAkB,kBAAlB,CAAT;;;;;EAES,SAAS,cAAT,OAAiE;QAAvC,mCAAuC;QAAxB,+BAAwB;QAAX,uBAAW;;AAC5E,WAAO,UAAC,GAAD,EAAS;AACZ,YAAI,OAAJ,CAAY,MAAZ;;;;+BAAqB,UAAU,aAAV,EAAyB,IAAzB,EAA+B;AAChD,mBAAO,KAAP,CAAa,aAAb,EAA4B,EAAE,UAAF,EAA5B,EADgD;;AAGhD,gBAAI,CAAC,cAAc,IAAd,EAAoB;AACrB,sBAAM,IAAI,KAAJ,CAAU,mCAAV,CAAN,CADqB;aAAzB;;AAIA,gBAAM,UAAU,OAAO,MAAP,CAAc,IAAI,OAAJ,CAAxB,CAP0C;AAQhD,gBAAM,QAAQ,wBAAY,cAAc,GAAd,EAAmB,WAA/B,CAAR,CAR0C;AAShD,oBAAQ,KAAR,GAAgB,KAAhB,CATgD;;AAWhD,gCAAO;AACH,gCADG;AAEH,sBAAM,cAAc,IAAd;AACN,0BAHG;AAIH,gCAJG;AAKH,wCALG;aAAP,EAXgD;SAA/B,CADT;;AAqBZ,YAAI,SAAS,UAAT,KAAwB,UAAxB,EAAoC;AACpC,mBAAO,KAAP,CAAa,kDAAb,EADoC;AAEpC,gBAAI,OAAJ,CAAY,MAAZ,CAAmB,aAAnB,EAAkC,WAAlC,EAFoC;SAAxC,MAGO;AACH,mBAAO,KAAP,CAAa,wBAAb,EADG;AAEH,qBAAS,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAChD,uBAAO,KAAP,CAAa,0CAAb,EADgD;AAEhD,oBAAI,OAAJ,CAAY,MAAZ,CAAmB,aAAnB,EAAkC,WAAlC,EAFgD;aAAN,CAA9C,CAFG;SAHP;KArBG,CADqE;CAAjE","file":"index.js","sourcesContent":["import { ConsoleLogger } from 'nightingale';\nimport render from 'fody';\nimport App from 'fody-redux';\nimport { createStore } from 'redux';\n\nconst logger = new ConsoleLogger('ibex.react-redux');\n\nexport default function ibexReactRedux({ appDescriptor, initialData, element }) {\n    return (app) => {\n        app.context.render = function (appDescriptor, data) {\n            logger.debug('render view', { data });\n\n            if (!appDescriptor.View) {\n                throw new Error('View is undefined, class expected');\n            }\n\n            const context = Object.create(app.context);\n            const store = createStore(appDescriptor.app, initialData);\n            context.store = store;\n\n            render({\n                context,\n                View: appDescriptor.View,\n                data,\n                element,\n                App,\n            });\n        };\n\n        if (document.readyState === 'complete') {\n            logger.debug('load react components, document is already ready');\n            app.context.render(appDescriptor, initialData);\n        } else {\n            logger.debug('waiting document ready');\n            document.addEventListener('DOMContentLoaded', () => {\n                logger.debug('load react components, document is ready');\n                app.context.render(appDescriptor, initialData);\n            });\n        }\n    };\n}\n"]}